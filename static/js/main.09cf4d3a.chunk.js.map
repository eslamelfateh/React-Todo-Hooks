{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAkEeA,MAhEf,SAAkBC,GAAQ,IAAD,EACIC,mBAASD,EAAME,KAAMF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACRC,EADQ,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAcpB,OACE,8BACE,sBAAMW,UAAU,YAAYC,SAbX,SAAAH,GACnBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAqB,IAAfD,KAAKE,UACpBC,KAAMjB,IAGRC,EAAS,KAKP,SACGL,EAAME,KAEL,qCACE,uBACEoB,KAAK,OACLC,YAAY,oBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,mBAAlB,yBAIF,qCACE,uBACEQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,cAAlB,+B,eCJGa,MA9Cf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAClC9B,mBAAS,CAChCgB,GAAI,KACJd,MAAO,KAHkD,mBACpDD,EADoD,KAC7C8B,EAD6C,KAc3D,OAAG9B,EAAKe,GACC,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAAAZ,GACnB4B,EAAW7B,EAAKe,GAAKd,GACrB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAUT,8BAEIyB,EAAMK,KAAI,SAACC,EAAKC,GAAN,OACR,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UAGE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEuB,QAAS,kBAAIP,EAAWI,EAAKjB,KAC7BH,UAAU,eAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAIL,EAAQ,CAACf,GAAGiB,EAAKjB,GAAKd,MAAM+B,EAAKb,QAC9CP,UAAU,mBAZNqB,SCyBLG,MAlDf,WAAqB,IAAD,EACSrC,mBAAS,IADlB,mBACX2B,EADW,KACHW,EADG,KAoClB,OACE,gCACE,4DACA,cAAC,EAAD,CAAUxB,SApCE,SAAAmB,GACd,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAGA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OAgCP,cAAC,EAAD,CACEb,MAAQA,EACRC,aAjBe,SAAAZ,GACnB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAWLZ,WAxBa,SAAAb,GACjB,IAAM0B,EAAW,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KAEvDsB,EAASI,IAsBLZ,WAjCa,SAACc,EAASC,GACvBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCTxDC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.09cf4d3a.chunk.js","sourcesContent":["import React,{useState ,useEffect , useRef} from 'react'\n\nfunction TodoForm(props) {\n  const [input , setInput] = useState(props.edit? props.edit.value : '');\n  \n  const inputRef = useRef(null)\n\n  useEffect(()=> {\n    inputRef.current.focus()\n  })\n\n  const handleChange = e => {\n    setInput(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random()* 1000),\n      text: input\n    })\n\n    setInput('')\n  };\n\n  return (\n    <div>\n      <form className='todo-form' onSubmit={handleSubmit} >\n        {props.edit ?\n        (\n          <>\n            <input \n              type='text' \n              placeholder='AUpdate your item'\n              value={input}\n              name='text'\n              className='todo-input edit'\n              onChange={handleChange}\n              ref={inputRef}\n            />\n            <button className=\"todo-button edit\"> Update </button>\n          </>    \n        ) :\n        (\n          <>\n            <input \n              type='text' \n              placeholder='Add a todo'\n              value={input}\n              name='text'\n              className='todo-input'\n              onChange={handleChange}\n              ref={inputRef}\n            />\n            <button className=\"todo-button\"> Add todo</button>  \n          </>\n        )\n\n      }\n        \n      </form>\n    </div>\n  )\n}\n\nexport default TodoForm\n","import React , {useState} from 'react';\nimport {RiCloseCircleLine}  from 'react-icons/ri'\nimport {TiEdit}  from 'react-icons/ti'\nimport TodoForm from './TodoForm';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n  const [edit , setEdit] = useState({\n    id: null,\n    value: '',\n  })\n\n  const submitUpdate = value => {\n    updateTodo(edit.id , value);\n    setEdit({\n      id: null ,\n      value: ''\n    })\n  }\n\n  if(edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n\n  return (\n    <div>\n      {\n        todos.map((todo,index) =>(\n          <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n               key={index}\n          >\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n              {todo.text}\n            </div>\n            <div className=\"icons\">\n              <RiCloseCircleLine \n                onClick={()=>removeTodo(todo.id)}\n                className='delet-icon'\n              />\n              <TiEdit \n                onClick={()=>setEdit({id:todo.id , value:todo.text})}\n                className='edit-icon'\n              />\n            </div>\n          </div>  \n        ))\n      }\n    </div>\n  )\n}\n\nexport default Todo\n","import React , {useState}from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\nfunction TodoList() {\n  const [todos , setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos]\n    setTodos(newTodos);\n  }\n\n  const updateTodo = (todoId , newValue) => {\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    \n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\n  }\n\n  const removeTodo = id => {\n    const removeArr= [...todos].filter(todo => todo.id !== id)\n\n    setTodos(removeArr)\n  }\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n\n  return (\n    <div>\n      <h1>What`s the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo \n        todos ={todos} \n        completeTodo ={completeTodo} \n        removeTodo ={removeTodo}\n        updateTodo = {updateTodo}\n      />\n    </div>\n  )\n}\n\nexport default TodoList\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}